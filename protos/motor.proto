syntax = "proto3";

package webots;

import "device.proto";
import "google/protobuf/empty.proto";

service MotorService {
  //ctor
  rpc GetMotor(MotorRequest) returns (MotorResponse);
  rpc SetPosition(SetPositionRequest) returns (google.protobuf.Empty);
  rpc SetVelocity(SetVelocityRequest) returns (google.protobuf.Empty);
  rpc GetVelocity(MotorRequest) returns (GetVelocityResponse);
  rpc SetTorque(SetTorqueRequest) returns (google.protobuf.Empty);
  rpc GetTorqueFeedback(MotorRequest) returns (GetTorqueFeedbackResponse);
  rpc GetMinPosition(MotorRequest) returns (GetMinPositionResponse);
  rpc GetMaxPosition(MotorRequest) returns (GetMaxPositionResponse);
  rpc SetControlPID(SetControlPIDRequest) returns (google.protobuf.Empty);
  rpc GetTargetPosition(MotorRequest) returns (GetTargetPositionResponse);
  rpc GetPositionSensor(MotorRequest) returns (GetPositionSensorResponse);
}

// @see DeviceRequest
message MotorRequest {
  // name replace motor pointer
  string name = 1;
  //void para method
}

// @see `controller.motor.Motor`
message MotorResponse {
  DeviceResponse device = 1;// Reuse the Device message

  //typedef enum { ROTATIONAL = 0, LINEAR } Type;
  enum Type {
    ROTATIONAL = 0;
    LINEAR = 1;
  }
  Type type = 2;
}

message SetPositionRequest {
  string name = 1;
  float position = 2;
}

message SetPositionResponse {
  bool success = 1;
}

message SetVelocityRequest {
  string name = 1;
  float velocity = 2;
}

message SetVelocityResponse {
  bool success = 1;
}

message GetVelocityResponse {
  float velocity = 1;
}

message SetTorqueRequest {
  string name = 1;
  float torque = 2;
}

message SetTorqueResponse {
  bool success = 1;
}

message GetTorqueFeedbackResponse {
  float torque = 1;
}

message GetMinPositionResponse {
  float min_position = 1;
}

message GetMaxPositionResponse {
  float max_position = 1;
}

message SetControlPIDRequest {
  string name = 1;
  float p = 2;
  float i = 3;
  float d = 4;
}

message SetControlPIDResponse {
  bool success = 1;
}

message GetTargetPositionResponse {
  float target_position = 1;
}

message GetPositionSensorResponse {
  string position_sensor_name = 1;
}